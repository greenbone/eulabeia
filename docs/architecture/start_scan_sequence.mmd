sequenceDiagram
    participant client
    participant eulabia_director
    participant eulabia_sensor
    participant scanner
    
    client->>eulabia_director: start_scan [scan_id]
    Note right of eulabia_director: Based on target information the scanner is chosen<br>
    loop Until sensor has sufficient memory

    eulabia_director->>eulabia_sensor: start_scan  [scan_id]
    Note right of eulabia_sensor: A sensor needs to check if it has sufficient memory to start the scan<br> 
    When it does have sufficient memory then it should ask for scan details.
    eulabia_sensor->>eulabia_director: get_scan [scan_id]
    eulabia_director->>eulabia_sensor: got_scan [scan_id, target]
    eulabia_sensor->>+scanner: start_scanner [target]
    
    eulabia_sensor->>eulabia_director: started_scan [scan_id]
    eulabia_sensor->>client: started_scan [scan_id]
    loop Results
        scanner->>eulabia_sensor: got_result [scan_id, oid, key, value]
        scanner->>eulabia_director: got_result [scan_id, oid, key, value]
        eulabia_director->>client: got_percentage [scan_id, percentage]
        scanner->>client: got_result [scan_id, oid, key value]
    end
    scanner->>-eulabia_sensor: stopped_scan [scan_id, status]
    eulabia_sensor->>eulabia_director: stopped_scan [scan_id, status]
    eulabia_sensor->>client: stopped_scan [scan_id, status]
